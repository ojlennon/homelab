version: "3.9"

networks:
  servarrnetwork:
    name: servarrnetwork
    ipam:
      config:
        - subnet: 172.39.0.0/24
  proxy:
    external: true

services:
  gluetun:
    image: qmcgaw/gluetun
    container_name: gluetun
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    networks:
      servarrnetwork:
        ipv4_address: 172.39.0.2
    ports:
      - 8080:8080     # qBittorrent Web UI
      - 6881:6881     # Torrent TCP
      - 6881:6881/udp # Torrent UDP
      - 9696:9696     # Prowlarr
      - 6789:6789     # NZBGet
    volumes:
      - ./gluetun:/gluetun
    env_file:
      - .env
    environment:
      - VPN_SERVICE_PROVIDER=mullvad
      - VPN_TYPE=wireguard
      - WIREGUARD_PRIVATE_KEY=${WIREGUARD_PRIVATE_KEY}
      - WIREGUARD_PUBLIC_KEY=${WIREGUARD_PUBLIC_KEY}
      - WIREGUARD_ADDRESSES=${WIREGUARD_ADDRESSES}
      - WIREGUARD_ENDPOINT=${WIREGUARD_ENDPOINT}
      - FIREWALL_OUTBOUND_SUBNETS=172.39.0.0/24
      - DOT=off
      - DNS_ADDRESS=1.1.1.1
      - TZ=${TZ}
    healthcheck:
      test: ping -c 1 1.1.1.1 || exit 1
      interval: 20s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:5.1.2
    container_name: qbittorrent
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - WEBUI_PORT=8080
      - TORRENTING_PORT=6881
    volumes:
      - ./qbittorrent:/config
      - ./downloads:/downloads
    labels:
      - deunhealth.restart.on.unhealthy=true
    healthcheck:
      test: ["CMD-SHELL", "wget --quiet --tries=1 --spider http://127.0.0.1:8080 || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped

  deunhealth:
    image: qmcgaw/deunhealth
    container_name: deunhealth
    network_mode: "none"
    environment:
      - LOG_LEVEL=info
      - HEALTH_SERVER_ADDRESS=127.0.0.1:9999
      - TZ=${TZ}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always

  nzbget:
    image: lscr.io/linuxserver/nzbget:latest
    container_name: nzbget
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./nzbget:/config
      - /downloads:/downloads
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./prowlarr:/config
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    networks:
      servarrnetwork:
        ipv4_address: 172.39.0.4
      proxy:
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./radarr:/config
      - ./downloads:/downloads
      - /mnt/media/movies:/movies
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    networks:
      servarrnetwork:
        ipv4_address: 172.39.0.3
      proxy:
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ./sonarr:/config
      - ./downloads:/downloads
      - /mnt/media/tv:/tv
    restart: unless-stopped

  # lidarr:
  #   image: lscr.io/linuxserver/lidarr:latest
  #   container_name: lidarr
  #   networks:
  #     servarrnetwork:
  #       ipv4_address: 172.39.0.5
  #   ports:
  #     - 8686:8686
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ./lidarr:/config
  #     - /data:/data
  #   restart: unless-stopped

  # bazarr:
  #   image: lscr.io/linuxserver/bazarr:latest
  #   container_name: bazarr
  #   networks:
  #     servarrnetwork:
  #       ipv4_address: 172.39.0.6
  #   ports:
  #     - 6767:6767
  #   environment:
  #     - PUID=${PUID}
  #     - PGID=${PGID}
  #     - TZ=${TZ}
  #   volumes:
  #     - ./bazarr:/config
  #     - /data:/data
  #   restart: unless-stopped

  # ─────────────── Jellyfin Media Server ───────────────
  jellyfin:
    image: jellyfin/jellyfin:latest
    container_name: jellyfin
    restart: unless-stopped
    environment:
      - TZ=America/Denver
    expose:
      - "8096"
    volumes:
      - ./jellyfin/config:/config
      - ./jellyfin/cache:/cache
      - /mnt/media/movies:/media/movies
      - /mnt/media/tv:/media/tv
    networks:
      servarrnetwork:
        ipv4_address: 172.39.0.7
      proxy:
